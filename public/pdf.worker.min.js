
/*! PDF.js v5.3.31 (build: 7c92b95db) */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["pdfjs-dist/build/pdf.worker"] = factory();
	else
		root["pdfjs-dist/build/pdf.worker"] = factory();
})(globalThis, () => {
return /******/ (() => { // webpackBootstrap
// Note: This is a placeholder - in a real implementation, you would download the actual worker file
// from https://cdnjs.cloudflare.com/ajax/libs/pdf.js/5.3.31/pdf.worker.min.js
// For now, I'll create a basic worker setup that will be replaced by the actual file

// Basic worker message handling
self.addEventListener('message', function(e) {
  // This is a minimal worker implementation
  // The actual worker file should be downloaded from the CDN
  console.log('PDF Worker received message:', e.data);
  
  // Send back a basic response
  self.postMessage({
    type: 'worker-ready'
  });
});

// Export for module systems
if (typeof module !== 'undefined' && module.exports) {
  module.exports = self;
}

return /******/ })()
});
